% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ngram_tracing.R
\name{ngram_tracing}
\alias{ngram_tracing}
\title{N-gram tracing}
\usage{
ngram_tracing(qs, candidates, coefficient, features = F, cores = NULL)
}
\arguments{
\item{qs}{The \code{quanteda} dfm containing the disputed texts to test.}

\item{candidates}{The \code{quanteda} dfm containing the data belonging to the candidate authors to test. This dfm can contain multiple samples but these will then be concatenated into one profile. This dfm can potentially contain the same rows as in q (e.g. for leave-one-out testing) as these are removed when identical.}

\item{coefficient}{The coefficient to use to compare texts.}

\item{features}{Logical with default FALSE. If TRUE then the result table will contain the features in the overlap.}

\item{cores}{The number of cores to use for parallel processing (the default is one).}
}
\value{
The function will test all possible combinations of q texts and candidate authors and return a
data frame containing the value of the similarity coefficient selected called 'score' and an optional column with the overlapping features. The data frame contains a column called 'target' with a logical value which is TRUE if the author of the Q text is the candidate and FALSE otherwise.
}
\description{
This function performs n-gram tracing.
}
\examples{
library(quanteda)

text1 <- 'The cat sat on the mat.'
k.corpus <-  corpus(text1)
k.dfm <- dfm(tokens(k.corpus))
docvars(k.dfm, 'author') <- 'K'

q <- 'The dog sat on the chair?'
q.dfm <- dfm(tokens(q))
docvars(q.dfm, 'author') <- 'Q'
docnames(q.dfm) <- 'Qtext' # document names should be distinct across all dfms used as input

ngram_tracing(q.dfm, k.dfm, 'Phi')
}
